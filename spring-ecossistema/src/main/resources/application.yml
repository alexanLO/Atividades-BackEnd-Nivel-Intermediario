# ===============================
# Aplicação Config
# ===============================
info:
  app:
    name: "@project.name@"
    description: "@project.description@"
    version: "@project.version@"

# ===============================
# Servidor Config
# ===============================
server:
  port: 9090 # Porta onde o servidor irá rodar

# ===============================
# logs Config
# ===============================
logging: # Nível de log para as classes do Spring Framework (INFO, DEBUG, ERROR, etc.)
  level:
    ROOT: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

#=============================================
# Actuator Config
#=============================================
management: 
  endpoints:
    access:
      default: NONE #Desabilita todos os Endpoints do Actuator
    web:
      base-path: / #Mudando o path do actuador de /actuator/<endpoint-actuator> para /<endpoint-actuator>
      exposure:
        # Exposição dos endpoints do Actuator
        # A configuração abaixo expõe apenas os endpoints de health, info e metrics
        # e desabilita a exposição pública de metrics
        # Para expor outros endpoints, adicione-os à lista
        # Exemplo: exposure.include: "health, info, metrics, env"
        include: "health, info, metrics"
  endpoint: 
    health: 
      access: READ_ONLY 
    info:
      access: READ_ONLY 
    metrics:
      access: NONE 


# ===============================
# Security JWT Config
# ===============================
jwt:
  security:
    token:
      secret: ${JWT_SECRET:my-secret-key} # Chave secreta para assinar o token JWT
      expiration: 3600000 # Tempo de expiração do token em milissegundos
      header: Authorization # Nome do cabeçalho HTTP onde o token JWT será enviado
      prefix: Bearer # Prefixo do token JWT no cabeçalho HTTP
      issuer: @project.name@ # Emissor do token JWT 
      roles: # Papéis permitidos no token JWT
        ADMIN
        USER

# ===============================
# Banco de Dados Oracle Config
#================================
spring:
  datasource:
    url: jdbc:oracle:thin:@localhost:1521/XEPDB1
    username: admin
    password: admin
    #url: ${SPRING_DATASOURCE_URL}
    # username: ${SPRING_DATASOURCE_USERNAME}
    # password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: oracle.jdbc.OracleDriver

#==============================
# JPA e Hibernate Config
#==============================
  jpa:
      hibernate:
        ddl-auto: update # Atualiza o esquema do banco de dados automaticamente
        show-sql: true # Exibe as consultas SQL no console
      properties:
        hibernate:
          dialect: org.hibernate.dialect.OracleDialect #Dialeto do banco de dados Oracle
          format_sql: true # Formata as consultas SQL exibidas no console
          use_sql_comments: true # Adiciona comentários às consultas SQL
      database-platform: org.hibernate.dialect.OracleDialect # Dialeto do banco de dados Oracle
      open-in-view: false # Desabilita o Open EntityManager in View para evitar problemas de LazyInitializationException
      generate-ddl: true # Gera o DDL (Data Definition Language) para o banco de dados
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl # Estratégia de nomenclatura física padrão do Hibernate
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl # Estratégia de nomenclatura implícita legada do JPA
#==============================
# Flyway Config
#==============================
  flyway:
    enabled: true
    url: jdbc:oracle:thin:@localhost:1521/XEPDB1
    user: admin
    password: admin
    #url: ${SPRING_DATASOURCE_URL}
    # user: ${SPRING_DATASOURCE_USERNAME}
    # password: ${SPRING_DATASOURCE_PASSWORD}
    baseline-on-migrate: true
#==============================
# Swagger Config
#==============================
#Uma vez habilitado, você também poderá ver os endpoints springdoc-openapi em: (host e porta dependem de suas configurações) - http://serverName:managementPort/actuator
# springdoc:
#   show-actuator: true # Propriedade para adicionar o spring-boot-actuator endpoints
#   use-management-port: true
#   # Esta propriedade permite que os pontos de extremidade openapi e swagger-ui sejam expostos abaixo do caminho base do atuador.
#   management:
#     server:
#       port: 9090
#     endpoints:
#       web:
#         exposure:
#           include: openapi, swagger-ui